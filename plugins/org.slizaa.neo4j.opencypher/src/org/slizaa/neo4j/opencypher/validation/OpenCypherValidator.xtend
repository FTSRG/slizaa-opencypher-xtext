/*
 * generated by Xtext 2.10.0
 */
package org.slizaa.neo4j.opencypher.validation

import java.util.regex.Pattern
import org.eclipse.xtext.EcoreUtil2
import org.eclipse.xtext.validation.Check
import org.slizaa.neo4j.opencypher.openCypher.OpenCypherPackage
import org.slizaa.neo4j.opencypher.openCypher.Return
import org.slizaa.neo4j.opencypher.openCypher.VersionNumber

/**
 * This class contains custom validation rules. 
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class OpenCypherValidator extends AbstractOpenCypherValidator {

	private static final Pattern VERSION_NUMBER_FORMAT = Pattern.compile("\\d*\\.\\d*");

	public static val INVALID_VERSION_NUMBER_FORMAT = 'invalidVersionNumber'

	public static val RETURN_NOT_AT_THE_END = 'returnNotAtTheEnd'

	@Check
	def checkVersionNumberFormat(VersionNumber versionNumber) {
		if (versionNumber.versionNumber != null) {
			if (!VERSION_NUMBER_FORMAT.matcher(versionNumber.versionNumber).matches()) {
				error('Version number must have the following format: (digit)+\'.\'(digit)+',
					OpenCypherPackage.Literals.VERSION_NUMBER__VERSION_NUMBER, INVALID_VERSION_NUMBER_FORMAT)
			}
		}
	}

	@Check
	def checkReturn(Return ret) {
		if (EcoreUtil2.getNextSibling(ret) != null) {
			error('RETURN can only be used once at the end of the query', ret,
				OpenCypherPackage.Literals.RETURN__RETURN, RETURN_NOT_AT_THE_END)
		}
	}
}
